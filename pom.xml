<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example.github</groupId>
	<artifactId>github-analytics</artifactId>
	<version>0.0.1.M1</version>
	<packaging>jar</packaging>

	<name>analytics</name>
	<description>Demo project for Spring Boot</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<spring-cloud-contract.version>1.1.1.RELEASE</spring-cloud-contract.version>
		<spring-cloud-bom.version>Dalston.SR1</spring-cloud-bom.version>
		<prometheus.version>0.0.21</prometheus.version>
		<!-- [PIPELINE] Stub group, artifact ids needed by Stub Runner -->
		<stubrunner.ids>com.example.github:github-webhook</stubrunner.ids>
		<!-- [PIPELINE] -->
		<distribution.management.release.id>artifactory-local</distribution.management.release.id>
		<!-- [PIPELINE] -->
		<distribution.management.release.url>http://localhost:8081/artifactory/libs-release-local</distribution.management.release.url>
		<!-- [PIPELINE] -->
		<repo.with.jars>http://localhost:8081/artifactory/libs-release-local</repo.with.jars>

		<asciidoctorj.version>1.5.6</asciidoctorj.version>
		<asciidoctor.maven.plugin.version>1.5.6</asciidoctor.maven.plugin.version>
		<asciidoctorj.pdf.version>1.5.0-alpha.16</asciidoctorj.pdf.version>
		<maven.jacoco.plugin.version>0.7.9</maven.jacoco.plugin.version>
		<snippetsDirectory>${project.build.directory}/snippets</snippetsDirectory>
		<jruby.version>1.7.26</jruby.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-stream-rabbit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- PROMETHEUS -->
		<!-- Hotspot JVM metrics -->
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_hotspot</artifactId>
			<version>${prometheus.version}</version>
		</dependency>
		<!-- Exposition servlet -->
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_servlet</artifactId>
			<version>${prometheus.version}</version>
		</dependency>
		<!-- The client -->
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient</artifactId>
			<version>${prometheus.version}</version>
		</dependency>
		<!-- Spring Boot -->
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_spring_boot</artifactId>
			<version>${prometheus.version}</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-stub-runner</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-test-support</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>spring-mock-mvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-contract-verifier</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.18.1</version>
						<configuration>
							<includes>
								<include>**/*Tests.java</include>
								<include>**/*Test.java</include>
							</includes>
							<excludes>
								<exclude>**/smoke/**</exclude>
								<exclude>**/e2e/**</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.springframework.cloud</groupId>
						<artifactId>spring-cloud-contract-maven-plugin</artifactId>
						<version>${spring-cloud-contract.version}</version>
						<extensions>true</extensions>
						<configuration>
							<baseClassForTests>org.springframework.github.BaseClass</baseClassForTests>
							<basePackageForTests>org.springframework.github.contracttests</basePackageForTests>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>${maven.jacoco.plugin.version}</version>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>default-report</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor.maven.plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>${asciidoctorj.pdf.version}</version>
							</dependency>
							<!-- Comment this section to use the default jruby artifact provided by the plugin -->
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby-complete</artifactId>
								<version>${jruby.version}</version>
							</dependency>
							<!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>${asciidoctorj.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<!-- Attributes common to all output formats -->
							<attributes>
								<endpoint-url>http://example.org</endpoint-url>
								<sourcedir>${project.build.sourceDirectory}</sourcedir>
								<project-version>${project.version}</project-version>
							</attributes>
						</configuration>
						<!-- Multiple execution blocks allow to configure different input documents, output formats
                        or other configuration options -->
						<executions>
							<execution>
								<id>asciidoc-usermanual-to-pdf</id>
								<phase>package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>src/docs/asciidoc</sourceDirectory>
									<outputDirectory>target/generated-docs</outputDirectory>
									<doctype>book</doctype>
									<backend>pdf</backend>
									<!-- Since 1.5.0-alpha.9, PDF back-end can also use 'rouge' which provides more coverage
                                    for other languages like scala -->
									<sourceHighlighter>coderay</sourceHighlighter>
									<attributes>
										<pagenums/>
										<toc/>
										<idprefix/>
										<idseparator>-</idseparator>
										<snippets>${snippetsDirectory}</snippets>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>asciidoc-techdocs-to-html</id>
								<phase>package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>src/docs/asciidoc</sourceDirectory>
									<outputDirectory>target/generated-docs</outputDirectory>
									<doctype>book</doctype>
									<backend>html5</backend>
									<sourceHighlighter>coderay</sourceHighlighter>
									<attributes>
										<imagesdir>./images</imagesdir>
										<toc>left</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<!-- set the idprefix to blank -->
										<idprefix/>
										<idseparator>-</idseparator>
										<docinfo1>true</docinfo1>
										<snippets>${snippetsDirectory}</snippets>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- [PIPELINE] -->
		<profile>
			<id>apicompatibility</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.18.1</version>
						<configuration>
							<includes>
								<include>**/contracttests/**/*Tests.java</include>
								<include>**/contracttests/**/*Test.java</include>
							</includes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.springframework.cloud</groupId>
						<artifactId>spring-cloud-contract-maven-plugin</artifactId>
						<version>${spring-cloud-contract.version}</version>
						<extensions>true</extensions>
						<configuration>
							<contractsRepositoryUrl>${repo.with.jars}</contractsRepositoryUrl>
							<contractDependency>
								<groupId>${project.groupId}</groupId>
								<artifactId>${project.artifactId}</artifactId>
								<classifier>stubs</classifier>
								<version>${latest.production.version}</version>
							</contractDependency>
							<contractsPath>/</contractsPath>
							<baseClassForTests>org.springframework.github.BaseClass</baseClassForTests>
							<basePackageForTests>org.springframework.github.contracttests</basePackageForTests>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- [PIPELINE] -->
		<profile>
			<id>smoke</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.18.1</version>
						<configuration>
							<includes>
								<include>smoke/**/*Tests.java</include>
								<include>smoke/**/*Test.java</include>
							</includes>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<!-- [PIPELINE] -->
	<distributionManagement>
		<repository>
			<id>${distribution.management.release.id}</id>
			<name>Spring Milestone Repository</name>
			<url>${distribution.management.release.url}</url>
		</repository>
	</distributionManagement>

</project>
